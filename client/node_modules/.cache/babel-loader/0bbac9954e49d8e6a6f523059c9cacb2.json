{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionSnapshotsToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get(); //const collectionsMap = convertCollectionSnapshotsToMap(snapshot);\n\n    const collectionsMap = yield call(convertCollectionSnapshotsToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/sanghapark/Documents/react-course/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionSnapshotsToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAYC,uBAAZ,EAAqCC,uBAArC,QAAoE,gBAApE;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAErC,MAAI;AACA,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAFA,CAGA;;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAiCO,QAAjC,CAAjC;AACA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AAEJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMhB,SAAS,CAACK,eAAe,CAACY,uBAAjB,EAA0CT,qBAA1C,CAAf;AACH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\n\nimport { firestore, convertCollectionSnapshotsToMap } from '../../firebase/firebase.utils';\n\nimport ShopActionTypes from './shop.types';\nimport {    fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        //const collectionsMap = convertCollectionSnapshotsToMap(snapshot);\n        const collectionsMap = yield call(convertCollectionSnapshotsToMap,snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap));\n    } catch (error) {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\n"]},"metadata":{},"sourceType":"module"}