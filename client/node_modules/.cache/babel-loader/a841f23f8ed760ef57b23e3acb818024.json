{"ast":null,"code":"var _jsxFileName = \"/Users/sanghapark/Documents/react-course/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotsToMap } from '../../firebase/firebase.utils';\nimport { WithSpinner } from '../../components/with-spinner/with-spinner.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const {\n      updateProxy\n    } = this.props;\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionSnapshotsToMap(snapshot);\n      updateProxy(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 40\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateProxy: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/sanghapark/Documents/react-course/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionSnapshotsToMap","WithSpinner","updateCollections","CollectionOverview","CollectionPage","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","updateProxy","props","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA6D,+BAA7D;AACA,SAASC,WAAT,QAA4B,sDAA5B;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAGA,MAAMC,6BAA6B,GAAGJ,WAAW,CAACE,kBAAD,CAAjD;AACA,MAAMG,yBAAyB,GAAGL,WAAW,CAACG,cAAD,CAA7C;;AAGA,MAAMG,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;AAAA,SAKnCC,uBALmC,GAKT,IALS;AAAA;;AAQnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AAEAH,IAAAA,aAAa,CAACI,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGnB,+BAA+B,CAACkB,QAAD,CAAtD;AACAH,MAAAA,WAAW,CAACI,cAAD,CAAX;AACA,WAAKC,QAAL,CAAc;AAACV,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJD;AAMH;;AAEDW,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKN,KAAvB;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AACI,MAAA,MAAM,EAAGP,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEN;AAA1C,SAAsDM,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACC,IAAK,gBAA3B;AACI,MAAA,MAAM,EAAGP,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEN;AAAtC,SAAkDM,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAUH;;AAlCkC;;AAqCvC,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACpCV,EAAAA,WAAW,EAAEI,cAAc,IACvBM,QAAQ,CAACvB,iBAAiB,CAACiB,cAAD,CAAlB;AAFwB,CAAL,CAAnC;;AAMA,eAAerB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\n\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotsToMap   } from '../../firebase/firebase.utils';\nimport { WithSpinner } from '../../components/with-spinner/with-spinner.component';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\n\nclass ShopPage extends React.Component {\n    state = {\n        loading: true\n    };\n\n    unsubscribeFromSnapshot = null;\n\n\n    componentDidMount() {\n        const collectionRef = firestore.collection('collections');\n        const { updateProxy } = this.props; \n\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionSnapshotsToMap(snapshot);\n            updateProxy(collectionsMap);\n            this.setState({loading: false});\n        });\n\n    }\n\n    render () {\n        const { match } = this.props;\n        const { loading } = this.state;\n\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} \n                    render={(props) => <CollectionOverviewWithSpinner isLoading={loading}{...props}/>}>\n                </Route>\n                <Route path={`${match.path}/:collectionId`} \n                    render={(props) => <CollectionPageWithSpinner isLoading={loading}{...props}/>}>\n                </Route>\n            </div>   \n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateProxy: collectionsMap =>\n        dispatch(updateCollections(collectionsMap))\n});\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}