{"ast":null,"code":"var _jsxFileName = \"/Users/sanghapark/Documents/react-course/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignIn({\n        email,\n        password\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    //render is the part that shows the visible part \n    const {\n      googleSignIn\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \" I already have an account \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      label: \"Email\",\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      label: \"Password\",\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignIn,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Sign In With Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignIn: () => dispatch(googleSignInStart()),\n  emailSignIn: () => dispatch(emailSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/sanghapark/Documents/react-course/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","emailSignIn","handleChange","value","name","target","setState","render","googleSignIn","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'; \nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n   \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        const { email, password } = this.state;\n        emailSignIn({email, password});\n    };\n\n    handleChange = event => {\n        const {value, name} = event.target;\n        this.setState({[name]: value});\n    }\n\n    render() { //render is the part that shows the visible part \n        const { googleSignIn } = this.props;\n        return (\n            <div className='sign-in'>\n                <h2> I already have an account </h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput \n                    name='email' \n                    type='email' \n                    value={this.state.email}\n                    label='Email'\n                    handleChange={this.handleChange} required />\n                    \n                    <FormInput\n                    name='password' \n                    type='password' \n                    value={this.state.password}\n                    label='Password'\n                    handleChange={this.handleChange} required />\n                \n                    <div className='buttons'>\n                        <CustomButton type='submit'>Sign In</CustomButton>\n                        <CustomButton type='button' onClick={ googleSignIn } isGoogleSignIn> \n                            Sign In With Google\n                        </CustomButton>\n                    </div>\n                    \n                </form>\n            </div>\n\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignIn: () => dispatch(googleSignInStart()),\n    emailSignIn: () => dispatch(emailSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}