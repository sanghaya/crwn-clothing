{"ast":null,"code":"var _jsxFileName = \"/Users/sanghapark/Documents/react-course/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotsToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const {\n      updateProxy\n    } = this.props;\n    console.log('here');\n    collectionRef.onSnapshot(async snapshot => {\n      console.log('heelo');\n      const collectionsMap = convertCollectionSnapshotsToMap(snapshot);\n      updateProxy(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateProxy: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/sanghapark/Documents/react-course/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","firestore","convertCollectionSnapshotsToMap","updateCollections","CollectionOverview","CollectionPage","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","updateProxy","props","console","log","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA6D,+BAA7D;AAEA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,uBADmC,GACT,IADS;AAAA;;AAGnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAL,IAAAA,aAAa,CAACM,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvCH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,YAAMG,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAL,MAAAA,WAAW,CAACM,cAAD,CAAX;AACH,KAJD;AAMH;;AAEDC,EAAAA,MAAM,GAAI;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEgB,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEhB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAxBkC;;AA2BvC,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCX,EAAAA,WAAW,EAAEM,cAAc,IACvBK,QAAQ,CAACpB,iBAAiB,CAACe,cAAD,CAAlB;AAFwB,CAAL,CAAnC;;AAMA,eAAelB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\n\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionSnapshotsToMap   } from '../../firebase/firebase.utils';\n\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nclass ShopPage extends React.Component {\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const collectionRef = firestore.collection('collections');\n        const { updateProxy } = this.props; \n\n        console.log('here')\n        collectionRef.onSnapshot(async snapshot => {\n            console.log('heelo');\n            const collectionsMap = convertCollectionSnapshotsToMap(snapshot);\n            updateProxy(collectionsMap);\n        });\n\n    }\n\n    render () {\n        const { match } = this.props;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} component={CollectionOverview}></Route>\n                <Route path={`${match.path}/:collectionId`} component={CollectionPage}></Route>\n            </div>   \n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateProxy: collectionsMap =>\n        dispatch(updateCollections(collectionsMap))\n});\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}